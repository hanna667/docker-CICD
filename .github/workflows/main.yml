name: Multi-Arch Docker Build, Scan, and GHCR Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-scan-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Create Dockerfile
        run: |
          cat <<'EOF' > Dockerfile
          FROM node:20-alpine

          WORKDIR /app

          # Copy package.json and package-lock.json first for better layer caching
          COPY package.json package-lock.json ./

          # Install dependencies
          RUN npm ci

          # Copy app source code
          COPY . .

          EXPOSE 3000

          CMD ["node", "index.js"]
          EOF
          cat Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.USERNAME }}
          password: ${{ secrets.TOKEN }}

      - name: Build Docker image (multi-arch)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          platforms: linux/${{ matrix.arch }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.arch }}-${{ github.sha }}

      - name: Docker Scout Scan
        uses: docker/scout-action@v1
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.arch }}-${{ github.sha }}
          sarif-file: scout-results.sarif

      - name: Upload SARIF to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: scout-results.sarif

      - name: Push Docker image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/${{ matrix.arch }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.arch }}-latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
