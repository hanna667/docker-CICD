
name: Multi-Architecture Docker Build, Scout Scan, and GHCR Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [linux/amd64, linux/arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add Dockerfile for simple Node.js web server
        run: |
          cat <<EOF > Dockerfile
          FROM node:20-slim

          WORKDIR /app

          # Copy package.json and package-lock.json first for better caching
          COPY package.json package-lock.json ./

          RUN npm install

          # Copy the rest of your app's source code
          COPY . .

          EXPOSE 8080

          CMD ["node", "app.js"]
          EOF

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.arch }}
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.arch }}

      - name: Docker Scout Scan
        uses: docker/scout-action@v1
        with:
          image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.arch }}
          only-severities: critical,high
          sarif-file: scout-results.sarif

      - name: Upload Scout SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: scout-results.sarif

      - name: Push Docker image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.arch }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.arch }}

  manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Create and push multi-arch manifest
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker manifest create ghcr.io/${{ github.repository }}:latest \
            ghcr.io/${{ github.repository }}:linux/amd64 \
            ghcr.io/${{ github.repository }}:linux/arm64
          docker manifest push ghcr.io/${{ github.repository }}:latest
